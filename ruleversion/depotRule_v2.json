{
    "title": "总仓库•V2",
    "author": "Reborn",
    "version": 1,
    "updateText": "修复总仓库更新程序",
    "rule": "rule:" 
}