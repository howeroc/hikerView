{
    "title": "总仓库",
    "author": "Reborn",
    "version": 22,
    "updateText": "1.现在支持自定义仓库啦(包括私有仓库噢)！\n2.补充自定义仓库author说明",
    "rule": "rule:" 
}